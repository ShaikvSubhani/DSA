Given a string s, sort it in decreasing order based on the frequency of the characters. 
The frequency of a character is the number of times it appears in the string.

Return the sorted string. If there are multiple answers, return any of them.

https://leetcode.com/problems/sort-characters-by-frequency/description/

class Solution {
    public String frequencySort(String s) {
       HashMap<Character,Integer> hm=new HashMap<>();
       PriorityQueue<Character> pq=new PriorityQueue<>((x,y)->hm.get(y)-hm.get(x));
       for(char c:s.toCharArray())
       {
           hm.put(c,hm.getOrDefault(c,0)+1);
       }
       for(char c:hm.keySet())
       {
           pq.offer(c);
       } 
        StringBuilder sb=new StringBuilder();
        while(!pq.isEmpty())
        {
            char c=pq.poll();
            for(int i=0;i<hm.get(c);i++)
            {
                sb.append(c);
            }
        }

        return sb.toString();
    }
}