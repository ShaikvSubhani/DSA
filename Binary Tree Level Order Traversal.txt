/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<List<Integer>> levelOrder(TreeNode root) {
        Queue<TreeNode> q=new LinkedList<>();
        List<List<Integer>> ans=new ArrayList<>();
        //corner case
        if(root==null)
        return ans;
        //1st will add the root
        q.add(root);
        while(q.size()>0)
        {
            int count=q.size();
            //RPA  -> remove,print and add
            List<Integer> level=new ArrayList<>();
            for(int i=0;i<count;i++)
            {
                TreeNode rn=q.poll();                       //removed and stored the node
                level.add(rn.val);                         //intead of printing will add it to list         
                if(rn.left!=null) q.add(rn.left);           //add left  and right if not null
                if(rn.right!=null) q.add(rn.right);
            }
            ans.add(level);
        }
        return ans;
        
    }
}